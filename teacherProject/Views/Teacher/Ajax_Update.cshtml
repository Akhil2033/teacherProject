@model teacherProject.Models.Teacher
@{
    ViewBag.Title = "Ajax_Update";
}

@{
    /*
    This file uses a combination of server rendering and ajax logic.
    - Server Rendering to pull current information about the teacher and display in fields
    - Request to update teacher with new values is fulfilled by ajax
    */


}

<div id="show-container">
    <nav>
        <a class="navlink" href="/Teacher/List">Back to teachers</a>
    </nav>
    <h2>Update @Model.TeacherFname @Model.TeacherLname</h2>
    @{
        /* AJAX Request to update teacher */
        /* No form submission needed */
        /* button onclick will handle form submission */
        /* Each item has an ID for validation && ajax submission */


    }



    <div class="inputrow">
        <label for="TeacherFname">First Name:</label>
        <input type="text" id="TeacherFname" name="TeacherFname" />
    </div>

    <div class="inputrow">
        <label for="TeacherLname">Last Name:</label>
        <input type="text" id="TeacherLname" name="TeacherLname" />
    </div>

    <div class="inputrow">
        <label for="EmployeeNumber">Employee Number:</label>
        <label typeof="text" id="EmployeeNumber" name="EmployeeNumber" />
    </div>

    <div class="inputrow">
        <label for="HireDate">Employment Date:</label>
        <input type="datetime" id="HireDate" name="HireDate" />
    </div>

    <div class="inputrow">
        <label for="Salary"> Salary:</label>
        <input type="number" id="Salary" name="Salary" />
    </div>

    @{
        //AddTeacher() is a JS method defined in /Scripts/teacher.js
    }
    <button onclick="UpdateTeacher(@Model.TeacherId);">Update Teacher</button>
</div>